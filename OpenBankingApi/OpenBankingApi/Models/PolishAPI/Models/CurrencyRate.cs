// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Klasa zawierająca kursy przewalutowań / Currency rate
    /// </summary>
    public partial class CurrencyRate
    {
        /// <summary>
        /// Initializes a new instance of the CurrencyRate class.
        /// </summary>
        public CurrencyRate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CurrencyRate class.
        /// </summary>
        /// <param name="rate">Kursy przewalutowania / Currency exchange
        /// rate</param>
        /// <param name="fromCurrency">Waluta rachunku, kod ISO / from
        /// Currency, ISO code</param>
        /// <param name="toCurrency">Waluta rachunku, kod ISO / to Currency,
        /// ISO code</param>
        public CurrencyRate(double? rate = default(double?), string fromCurrency = default(string), string toCurrency = default(string))
        {
            Rate = rate;
            FromCurrency = fromCurrency;
            ToCurrency = toCurrency;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets kursy przewalutowania / Currency exchange rate
        /// </summary>
        [JsonProperty(PropertyName = "rate")]
        public double? Rate { get; set; }

        /// <summary>
        /// Gets or sets waluta rachunku, kod ISO / from Currency, ISO code
        /// </summary>
        [JsonProperty(PropertyName = "fromCurrency")]
        public string FromCurrency { get; set; }

        /// <summary>
        /// Gets or sets waluta rachunku, kod ISO / to Currency, ISO code
        /// </summary>
        [JsonProperty(PropertyName = "toCurrency")]
        public string ToCurrency { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FromCurrency != null)
            {
                if (FromCurrency.Length > 3)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "FromCurrency", 3);
                }
            }
            if (ToCurrency != null)
            {
                if (ToCurrency.Length > 3)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ToCurrency", 3);
                }
            }
        }
    }
}
