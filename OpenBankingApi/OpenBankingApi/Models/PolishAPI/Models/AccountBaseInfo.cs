// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Klasa informacji o koncie / Account Information Class
    /// </summary>
    public partial class AccountBaseInfo
    {
        /// <summary>
        /// Initializes a new instance of the AccountBaseInfo class.
        /// </summary>
        public AccountBaseInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountBaseInfo class.
        /// </summary>
        /// <param name="accountNumber">Numer rachunku (częściowo zamaskowany)
        /// / Account number (partly masked)</param>
        /// <param name="accountTypeName">Nazwa typu rachunku / Account type
        /// name</param>
        /// <param name="accountType">Typ rachunku / Account type</param>
        public AccountBaseInfo(string accountNumber, string accountTypeName, string accountType)
        {
            AccountNumber = accountNumber;
            AccountTypeName = accountTypeName;
            AccountType = accountType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets numer rachunku (częściowo zamaskowany) / Account
        /// number (partly masked)
        /// </summary>
        [JsonProperty(PropertyName = "accountNumber")]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets nazwa typu rachunku / Account type name
        /// </summary>
        [JsonProperty(PropertyName = "accountTypeName")]
        public string AccountTypeName { get; set; }

        /// <summary>
        /// Gets or sets typ rachunku / Account type
        /// </summary>
        [JsonProperty(PropertyName = "accountType")]
        public string AccountType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AccountNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountNumber");
            }
            if (AccountTypeName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountTypeName");
            }
            if (AccountType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountType");
            }
        }
    }
}
