// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Models.AIS.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Klasa zapytania o pojedynczą transakcję / Transaction Detail Request
    /// Class
    /// </summary>
    public partial class TransactionDetailRequest
    {
        /// <summary>
        /// Initializes a new instance of the TransactionDetailRequest class.
        /// </summary>
        public TransactionDetailRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionDetailRequest class.
        /// </summary>
        /// <param name="transactionId">ID transakcji / Transaction ID</param>
        /// <param name="accountNumber">Numer konta nadawcy / Sender account
        /// number</param>
        /// <param name="bookingDate">Data zaksięgowania operacji, YYYY-MM-DD /
        /// Transaction booking date</param>
        public TransactionDetailRequest(RequestHeaderAIS requestHeader, string transactionId, string accountNumber = default(string), System.DateTime? bookingDate = default(System.DateTime?))
        {
            RequestHeader = requestHeader;
            TransactionId = transactionId;
            AccountNumber = accountNumber;
            BookingDate = bookingDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestHeader")]
        public RequestHeaderAIS RequestHeader { get; set; }

        /// <summary>
        /// Gets or sets ID transakcji / Transaction ID
        /// </summary>
        [JsonProperty(PropertyName = "transactionId")]
        public string TransactionId { get; set; }

        /// <summary>
        /// Gets or sets numer konta nadawcy / Sender account number
        /// </summary>
        [JsonProperty(PropertyName = "accountNumber")]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets data zaksięgowania operacji, YYYY-MM-DD / Transaction
        /// booking date
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "bookingDate")]
        public System.DateTime? BookingDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RequestHeader == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RequestHeader");
            }
            if (TransactionId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TransactionId");
            }
            if (RequestHeader != null)
            {
                RequestHeader.Validate();
            }
            if (TransactionId != null)
            {
                if (TransactionId.Length > 64)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "TransactionId", 64);
                }
            }
            if (AccountNumber != null)
            {
                if (AccountNumber.Length > 34)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "AccountNumber", 34);
                }
            }
        }
    }
}
