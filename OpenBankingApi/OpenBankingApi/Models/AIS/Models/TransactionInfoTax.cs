// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Klasa informacji danych dla przelewu podatkowego do Urzędu Skarbowego
    /// lub Izby Celnej / Tax Transfer
    /// </summary>
    public partial class TransactionInfoTax
    {
        /// <summary>
        /// Initializes a new instance of the TransactionInfoTax class.
        /// </summary>
        public TransactionInfoTax()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionInfoTax class.
        /// </summary>
        /// <param name="formCode">Symbol formularza Urzędu Skarbowego lub Izby
        /// Celnej / Tax authority form symbol</param>
        /// <param name="periodId">Numer okresu / Period number</param>
        /// <param name="periodType">Typ okresu / Period type</param>
        /// <param name="year">Rok okresu / Period year</param>
        /// <param name="obligationId">Identyfikator zobowiązania, z którego
        /// wynika należność podatku np. decyzja, tytuł wykonawczy,
        /// postanowienie / Obligation ID</param>
        public TransactionInfoTax(Payor payerInfo, string formCode, string periodId, string periodType, double year, string obligationId = default(string))
        {
            PayerInfo = payerInfo;
            FormCode = formCode;
            PeriodId = periodId;
            PeriodType = periodType;
            Year = year;
            ObligationId = obligationId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "payerInfo")]
        public Payor PayerInfo { get; set; }

        /// <summary>
        /// Gets or sets symbol formularza Urzędu Skarbowego lub Izby Celnej /
        /// Tax authority form symbol
        /// </summary>
        [JsonProperty(PropertyName = "formCode")]
        public string FormCode { get; set; }

        /// <summary>
        /// Gets or sets numer okresu / Period number
        /// </summary>
        [JsonProperty(PropertyName = "periodId")]
        public string PeriodId { get; set; }

        /// <summary>
        /// Gets or sets typ okresu / Period type
        /// </summary>
        [JsonProperty(PropertyName = "periodType")]
        public string PeriodType { get; set; }

        /// <summary>
        /// Gets or sets rok okresu / Period year
        /// </summary>
        [JsonProperty(PropertyName = "year")]
        public double Year { get; set; }

        /// <summary>
        /// Gets or sets identyfikator zobowiązania, z którego wynika należność
        /// podatku np. decyzja, tytuł wykonawczy, postanowienie / Obligation
        /// ID
        /// </summary>
        [JsonProperty(PropertyName = "obligationId")]
        public string ObligationId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PayerInfo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PayerInfo");
            }
            if (FormCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FormCode");
            }
            if (PeriodId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PeriodId");
            }
            if (PeriodType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PeriodType");
            }
            if (PayerInfo != null)
            {
                PayerInfo.Validate();
            }
            if (FormCode != null)
            {
                if (FormCode.Length > 7)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "FormCode", 7);
                }
            }
            if (PeriodId != null)
            {
                if (PeriodId.Length > 7)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "PeriodId", 7);
                }
            }
            if (PeriodType != null)
            {
                if (PeriodType.Length > 7)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "PeriodType", 7);
                }
            }
            if (ObligationId != null)
            {
                if (ObligationId.Length > 40)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "ObligationId", 40);
                }
            }
        }
    }
}
