// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Api.Models.AIS.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Klasa zawierająca dane nadawcy/odbiorcy używana w żądaniach AIS / AIS
    /// Sender Recipient Data Class
    /// </summary>
    public partial class SenderRecipient
    {
        /// <summary>
        /// Initializes a new instance of the SenderRecipient class.
        /// </summary>
        public SenderRecipient()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SenderRecipient class.
        /// </summary>
        /// <param name="accountNumber">Numer konta odbiorcy / Account
        /// number</param>
        /// <param name="accountMassPayment">Numer wirtualny rachunku odbiorcy
        /// w formacie IBAN / Virtual account name</param>
        public SenderRecipient(string accountNumber, string accountMassPayment = default(string), Bank bank = default(Bank), NameAddress nameAddress = default(NameAddress))
        {
            AccountNumber = accountNumber;
            AccountMassPayment = accountMassPayment;
            Bank = bank;
            NameAddress = nameAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets numer konta odbiorcy / Account number
        /// </summary>
        [JsonProperty(PropertyName = "accountNumber")]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or sets numer wirtualny rachunku odbiorcy w formacie IBAN /
        /// Virtual account name
        /// </summary>
        [JsonProperty(PropertyName = "accountMassPayment")]
        public string AccountMassPayment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bank")]
        public Bank Bank { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nameAddress")]
        public NameAddress NameAddress { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AccountNumber == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountNumber");
            }
            if (Bank != null)
            {
                Bank.Validate();
            }
            if (NameAddress != null)
            {
                NameAddress.Validate();
            }
        }
    }
}
