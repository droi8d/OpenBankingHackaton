// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

using Api.Models.AIS.Models;

namespace Api.Models.AIS
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Interface specification for services provided by third parties based on
    /// access to payment accounts. Prepared by the Polish Bank Association and
    /// its affiliates
    /// </summary>
    public partial interface IPolishAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Prefered language of response
        /// </summary>
        string AcceptLanguage { get; set; }

        /// <summary>
        /// Detached JWS signature of the body of the payload
        /// </summary>
        string XJWSSIGNATURE { get; set; }


        /// <summary>
        /// Removes consent
        /// </summary>
        /// <remarks>
        /// Removes consent
        /// </remarks>
        /// <param name='deleteConsentRequest'>
        /// Data for delete Consent Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Error,DeleteConsentHeaders>> DeleteConsentWithHttpMessagesAsync(DeleteConsentRequest deleteConsentRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get information about all user's payment account
        /// </summary>
        /// <remarks>
        /// User identification based on access token
        /// </remarks>
        /// <param name='getAccountsRequest'>
        /// Data for Accounts Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetAccountsHeaders>> GetAccountsWithHttpMessagesAsync(AccountsRequest getAccountsRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get detailed information about user payment account
        /// </summary>
        /// <remarks>
        /// User identification based on access token
        /// </remarks>
        /// <param name='getAccountRequest'>
        /// Data for Account Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetAccountHeaders>> GetAccountWithHttpMessagesAsync(AccountInfoRequest getAccountRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get list of user done transactions
        /// </summary>
        /// <param name='getTransactionsDoneRequest'>
        /// Data for Transactions Done Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetTransactionsDoneHeaders>> GetTransactionsDoneWithHttpMessagesAsync(TransactionInfoRequest getTransactionsDoneRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get list of user's rejected transactions
        /// </summary>
        /// <param name='getTransactionsRejectedRequest'>
        /// Data for Transactions Rejected Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetTransactionsRejectedHeaders>> GetTransactionsRejectedWithHttpMessagesAsync(TransactionInfoRequest getTransactionsRejectedRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get list of user's holded operations
        /// </summary>
        /// <param name='getHoldsRequest'>
        /// Data for hold Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetHoldsHeaders>> GetHoldsWithHttpMessagesAsync(TransactionHoldRequest getHoldsRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get detailed information about user's single transaction
        /// </summary>
        /// <param name='getTransationDetailRequest'>
        /// Data for transation detail Request
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<object,GetTransactionDetailHeaders>> GetTransactionDetailWithHttpMessagesAsync(TransactionDetailRequest getTransationDetailRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
